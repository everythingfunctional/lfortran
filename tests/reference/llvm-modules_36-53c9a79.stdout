; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i1*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }
%fpm_run_settings_polymorphic = type { i64, %fpm_run_settings* }
%fpm_run_settings = type { %fpm_build_settings, %array.0, i8*, i8*, i1 }
%fpm_build_settings = type { i1 }
%array.0 = type { i8**, i32, %dimension_descriptor*, i1, i32 }
%__vtab_fpm_run_settings = type { i64 }

@0 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

define i1 @any_4_1_0(%array* %mask) {
.entry:
  %__1_i = alloca i32, align 4
  %any_4_1_0 = alloca i1, align 1
  store i1 false, i1* %any_4_1_0, align 1
  %0 = getelementptr %array, %array* %mask, i32 0, i32 2
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = sub i32 %4, 1
  store i32 %5, i32* %__1_i, align 4
  br label %loop.head

loop.head:                                        ; preds = %ifcont, %.entry
  %6 = load i32, i32* %__1_i, align 4
  %7 = add i32 %6, 1
  %8 = getelementptr %array, %array* %mask, i32 0, i32 2
  %9 = load %dimension_descriptor*, %dimension_descriptor** %8, align 8
  %10 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %9, i32 0
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, %12
  %16 = sub i32 %15, 1
  %17 = icmp sle i32 %7, %16
  br i1 %17, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %18 = load i32, i32* %__1_i, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %__1_i, align 4
  %20 = load i1, i1* %any_4_1_0, align 1
  %21 = load i32, i32* %__1_i, align 4
  %22 = getelementptr %array, %array* %mask, i32 0, i32 2
  %23 = load %dimension_descriptor*, %dimension_descriptor** %22, align 8
  %24 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %23, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = sub i32 %21, %26
  %28 = mul i32 1, %27
  %29 = add i32 0, %28
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = mul i32 1, %31
  %33 = getelementptr %array, %array* %mask, i32 0, i32 0
  %34 = load i1*, i1** %33, align 8
  %35 = getelementptr inbounds i1, i1* %34, i32 %29
  %36 = load i1, i1* %35, align 1
  %37 = icmp eq i1 %20, false
  %38 = alloca i1, align 1
  br i1 %37, label %then, label %else

then:                                             ; preds = %loop.body
  store i1 %36, i1* %38, align 1
  br label %ifcont

else:                                             ; preds = %loop.body
  store i1 %20, i1* %38, align 1
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %39 = load i1, i1* %38, align 1
  store i1 %39, i1* %any_4_1_0, align 1
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end
  %40 = load i1, i1* %any_4_1_0, align 1
  ret i1 %40
}

define void @__module_modules_36_fpm_main_01_cmd_run(%fpm_run_settings_polymorphic* %settings, i1* %test) {
.entry:
  %0 = alloca %__vtab_fpm_run_settings, align 8
  %1 = getelementptr %__vtab_fpm_run_settings, %__vtab_fpm_run_settings* %0, i32 0, i32 0
  store i64 0, i64* %1, align 4
  %__1_t = alloca i32, align 4
  %__libasr__created__var__0__logicalnot_unary_op_res = alloca %array, align 8
  %2 = getelementptr %array, %array* %__libasr__created__var__0__logicalnot_unary_op_res, i32 0, i32 1
  store i32 0, i32* %2, align 4
  %3 = getelementptr %array, %array* %__libasr__created__var__0__logicalnot_unary_op_res, i32 0, i32 2
  %4 = alloca i32, align 4
  store i32 1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = alloca %dimension_descriptor, i32 %5, align 8
  %7 = getelementptr %array, %array* %__libasr__created__var__0__logicalnot_unary_op_res, i32 0, i32 4
  store i32 1, i32* %7, align 4
  store %dimension_descriptor* %6, %dimension_descriptor** %3, align 8
  %8 = load %dimension_descriptor*, %dimension_descriptor** %3, align 8
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %8, i32 0
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 0
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 2
  store i32 1, i32* %10, align 4
  store i32 1, i32* %11, align 4
  store i32 2, i32* %12, align 4
  %13 = alloca i32, align 4
  store i32 2, i32* %13, align 4
  %14 = getelementptr %array, %array* %__libasr__created__var__0__logicalnot_unary_op_res, i32 0, i32 0
  %15 = load i32, i32* %13, align 4
  %16 = alloca i1, i32 %15, align 1
  store i1* %16, i1** %14, align 8
  %found = alloca %array, align 8
  %17 = getelementptr %array, %array* %found, i32 0, i32 1
  store i32 0, i32* %17, align 4
  %18 = getelementptr %array, %array* %found, i32 0, i32 2
  %19 = alloca i32, align 4
  store i32 1, i32* %19, align 4
  %20 = load i32, i32* %19, align 4
  %21 = alloca %dimension_descriptor, i32 %20, align 8
  %22 = getelementptr %array, %array* %found, i32 0, i32 4
  store i32 1, i32* %22, align 4
  store %dimension_descriptor* %21, %dimension_descriptor** %18, align 8
  %23 = load %dimension_descriptor*, %dimension_descriptor** %18, align 8
  %24 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %23, i32 0
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  store i32 1, i32* %25, align 4
  store i32 1, i32* %26, align 4
  store i32 2, i32* %27, align 4
  %28 = alloca i32, align 4
  store i32 2, i32* %28, align 4
  %29 = getelementptr %array, %array* %found, i32 0, i32 0
  %30 = load i32, i32* %28, align 4
  %31 = alloca i1, i32 %30, align 1
  store i1* %31, i1** %29, align 8
  %toomany = alloca i1, align 1
  %32 = getelementptr %array, %array* %__libasr__created__var__0__logicalnot_unary_op_res, i32 0, i32 2
  %33 = load %dimension_descriptor*, %dimension_descriptor** %32, align 8
  %34 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = sub i32 %36, 1
  store i32 %37, i32* %__1_t, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %38 = load i32, i32* %__1_t, align 4
  %39 = add i32 %38, 1
  %40 = getelementptr %array, %array* %__libasr__created__var__0__logicalnot_unary_op_res, i32 0, i32 2
  %41 = load %dimension_descriptor*, %dimension_descriptor** %40, align 8
  %42 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %41, i32 0
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %42, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = add i32 %46, %44
  %48 = sub i32 %47, 1
  %49 = icmp sle i32 %39, %48
  br i1 %49, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %50 = load i32, i32* %__1_t, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %__1_t, align 4
  %52 = load i32, i32* %__1_t, align 4
  %53 = getelementptr %array, %array* %__libasr__created__var__0__logicalnot_unary_op_res, i32 0, i32 2
  %54 = load %dimension_descriptor*, %dimension_descriptor** %53, align 8
  %55 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %54, i32 0
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = sub i32 %52, %57
  %59 = mul i32 1, %58
  %60 = add i32 0, %59
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = mul i32 1, %62
  %64 = getelementptr %array, %array* %__libasr__created__var__0__logicalnot_unary_op_res, i32 0, i32 0
  %65 = load i1*, i1** %64, align 8
  %66 = getelementptr inbounds i1, i1* %65, i32 %60
  %67 = load i32, i32* %__1_t, align 4
  %68 = getelementptr %array, %array* %found, i32 0, i32 2
  %69 = load %dimension_descriptor*, %dimension_descriptor** %68, align 8
  %70 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %69, i32 0
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %70, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = sub i32 %67, %72
  %74 = mul i32 1, %73
  %75 = add i32 0, %74
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %70, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = mul i32 1, %77
  %79 = getelementptr %array, %array* %found, i32 0, i32 0
  %80 = load i1*, i1** %79, align 8
  %81 = getelementptr inbounds i1, i1* %80, i32 %75
  %82 = load i1, i1* %81, align 1
  %83 = xor i1 %82, true
  store i1 %83, i1* %66, align 1
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %84 = alloca %array, align 8
  %85 = call i1 @any_4_1_0(%array* %__libasr__created__var__0__logicalnot_unary_op_res)
  %86 = load i1, i1* %toomany, align 1
  %87 = load i1, i1* %test, align 1
  %88 = xor i1 %87, true
  %89 = icmp eq i1 %86, false
  %90 = alloca i1, align 1
  br i1 %89, label %then, label %else

then:                                             ; preds = %loop.end
  store i1 %86, i1* %90, align 1
  br label %ifcont

else:                                             ; preds = %loop.end
  store i1 %88, i1* %90, align 1
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %91 = load i1, i1* %90, align 1
  %92 = load i1, i1* %toomany, align 1
  %93 = getelementptr %fpm_run_settings_polymorphic, %fpm_run_settings_polymorphic* %settings, i32 0, i32 1
  %94 = load %fpm_run_settings*, %fpm_run_settings** %93, align 8
  %95 = getelementptr %fpm_run_settings, %fpm_run_settings* %94, i32 0, i32 3
  %96 = load i8*, i8** %95, align 8
  %97 = alloca i8*, align 8
  store i8* %96, i8** %97, align 8
  %98 = alloca i8*, align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i32 0, i32 0), i8** %98, align 8
  %99 = call i1 @_lpython_str_compare_noteq(i8** %97, i8** %98)
  %100 = icmp eq i1 %92, false
  %101 = alloca i1, align 1
  br i1 %100, label %then1, label %else2

then1:                                            ; preds = %ifcont
  store i1 %92, i1* %101, align 1
  br label %ifcont3

else2:                                            ; preds = %ifcont
  store i1 %99, i1* %101, align 1
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %102 = load i1, i1* %101, align 1
  %103 = icmp eq i1 %91, false
  %104 = alloca i1, align 1
  br i1 %103, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  store i1 %102, i1* %104, align 1
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  store i1 %91, i1* %104, align 1
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  %105 = load i1, i1* %104, align 1
  %106 = getelementptr %fpm_run_settings_polymorphic, %fpm_run_settings_polymorphic* %settings, i32 0, i32 1
  %107 = load %fpm_run_settings*, %fpm_run_settings** %106, align 8
  %108 = getelementptr %fpm_run_settings, %fpm_run_settings* %107, i32 0, i32 0
  %109 = getelementptr %fpm_build_settings, %fpm_build_settings* %108, i32 0, i32 0
  %110 = load i1, i1* %109, align 1
  %111 = xor i1 %110, true
  %112 = icmp eq i1 %105, false
  %113 = alloca i1, align 1
  br i1 %112, label %then7, label %else8

then7:                                            ; preds = %ifcont6
  store i1 %105, i1* %113, align 1
  br label %ifcont9

else8:                                            ; preds = %ifcont6
  store i1 %111, i1* %113, align 1
  br label %ifcont9

ifcont9:                                          ; preds = %else8, %then7
  %114 = load i1, i1* %113, align 1
  %115 = icmp eq i1 %85, false
  %116 = alloca i1, align 1
  br i1 %115, label %then10, label %else11

then10:                                           ; preds = %ifcont9
  store i1 %114, i1* %116, align 1
  br label %ifcont12

else11:                                           ; preds = %ifcont9
  store i1 %85, i1* %116, align 1
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %117 = load i1, i1* %116, align 1
  br i1 %117, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  br label %return

return:                                           ; preds = %ifcont15
  ret void
}

declare i1 @_lpython_str_compare_noteq(i8**, i8**)

define i32 @main(i32 %0, i8** %1) {
.entry:
  %call_arg_value = alloca i1, align 1
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %settings = alloca %fpm_run_settings, align 8
  %2 = getelementptr %fpm_run_settings, %fpm_run_settings* %settings, i32 0, i32 2
  %3 = getelementptr %fpm_run_settings, %fpm_run_settings* %settings, i32 0, i32 4
  %4 = getelementptr %fpm_run_settings, %fpm_run_settings* %settings, i32 0, i32 1
  %5 = getelementptr %array.0, %array.0* %4, i32 0, i32 1
  store i32 0, i32* %5, align 4
  %6 = getelementptr %array.0, %array.0* %4, i32 0, i32 2
  %7 = alloca i32, align 4
  store i32 1, i32* %7, align 4
  %8 = load i32, i32* %7, align 4
  %9 = alloca %dimension_descriptor, i32 %8, align 8
  %10 = getelementptr %array.0, %array.0* %4, i32 0, i32 4
  store i32 1, i32* %10, align 4
  store %dimension_descriptor* %9, %dimension_descriptor** %6, align 8
  %11 = load %dimension_descriptor*, %dimension_descriptor** %6, align 8
  %12 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %11, i32 0
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 1
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 2
  store i32 1, i32* %13, align 4
  store i32 1, i32* %14, align 4
  store i32 2, i32* %15, align 4
  %16 = alloca i32, align 4
  store i32 2, i32* %16, align 4
  %17 = getelementptr %array.0, %array.0* %4, i32 0, i32 0
  %18 = load i32, i32* %16, align 4
  %19 = alloca i8*, i32 %18, align 8
  store i8** %19, i8*** %17, align 8
  %20 = getelementptr %fpm_run_settings, %fpm_run_settings* %settings, i32 0, i32 3
  %21 = alloca %fpm_run_settings_polymorphic, align 8
  %22 = getelementptr %fpm_run_settings_polymorphic, %fpm_run_settings_polymorphic* %21, i32 0, i32 0
  store i64 0, i64* %22, align 4
  %23 = getelementptr %fpm_run_settings_polymorphic, %fpm_run_settings_polymorphic* %21, i32 0, i32 1
  store %fpm_run_settings* %settings, %fpm_run_settings** %23, align 8
  store i1 true, i1* %call_arg_value, align 1
  call void @__module_modules_36_fpm_main_01_cmd_run(%fpm_run_settings_polymorphic* %21, i1* %call_arg_value)
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)
